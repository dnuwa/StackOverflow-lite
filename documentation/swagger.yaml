swagger: "2.0"
info:
  description: "StackOverflow-lite is a platform where people can ask questions and provide answers."
  version: "1.0.0"
  title: "Stackoverflow-Lite API"
  termsOfService: "https://github.com/dnuwa/StackOverflow-lite"
  contact:
    email: "daniel.nuwa@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "127.0.0.1:5000"
basePath: "/api/v1"

schemes:
- "http"
paths:
  /subscribers:
    post:
      tags:
      - "Users"
      summary: "add a new subscriber"
      description: "this is a POST request to add a new user"

      consumes:
      - "application/json"

      produces:
      - "application/xml"

      parameters:
      - in: "body"
        name: "body"
        description: "user details to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        405:
          description: "Invalid input"
      
        
    get:
      tags:
      - "Users"
      summary: "retrieve all users"
      description: "this is a get request to retrieve all users"
      
      produces:
      - "application/json"
      
      
      responses:
        405:
          description: "Invalid input"
      
    
  /questions:
  
    post:
      tags:
      - "questions"
      summary: "add a new question"
      description: "this adds aquestion to the questions data structure"

      consumes:
      - "application/json"

      produces:
      - "application/json"

      parameters:
      - in: "body"
        name: "body"
        description: "user details to be added to the list"
        required: true
        schema:
          $ref: "#/definitions/question"
      responses:
        405:
          description: "Invalid input"
      
        
    get:
      tags:
      - "questions"
      summary: "returns all questions stored in the list"
      description: "Multiple values can be provided with comma separated strings"
      operationId: "getallQns"
      produces:
 
      - "application/json"
      
      responses:
        200:
          description: "successful operation"
          
        400:
          description: "Invalid status value"
          
  
    
  /questions/{Id}:
    get:
      tags:
      - "questions"
      summary: "Find question by ID"
      description: "Returns a single question"

      produces:

      - "application/json"
      parameters:
      - name: "Id"
        in: "path"
        description: "ID of question to return"
        required: true
        type: "integer"

      responses:
        200:
          description: "successful operation"
          
        400:
          description: "Invalid ID supplied"
        404:
          description: "question not found"
      
  /{qn_Id}/answer:
    post:
      tags:
      - "answers"
      
      summary: "post an answers to a question"
      description: "post an answer to the id of the question passed in"
      
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "qn_Id"
        in: "path"
        description: "ID of question to answer"
        required: true
        type: "integer"

      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/answer"
            
    get:
      tags:
      - "answers"
      summary: "Returns answers to a question"
      description: "Returns all answers to the id of the question passed in "

      produces:
      - "application/json"
      parameters:
      - name: "qn_Id"
        in: "path"
        description: "ID of question to answer"
        required: true
        type: "integer"
        
      responses:
        200:
          description: "successful operation"
      
  /answers:
    get:
      tags:
      - "answers"
      summary: "Returns pet inventories by status"
      description: "Returns "

      produces:
      - "application/json"
      parameters:
      - name: "qn_Id"
        in: "path"
        description: "ID of question to answer"
        required: true
        type: "integer"
        
      responses:
        200:
          description: "successful operation"
          
      
 
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  User:
    type: "object"
    properties:
      
      display_name:
        type: "string"

      email:
        type: "string"

      password:
        type: "string"
        
  
  question:
    type: "object"
    properties:
    
      display_name:
        type: "string"
        
      qn_id:
        type: "integer"

      qn:
        type: "string"
    
  answer:
    type: "object"
    properties:
    
      ans_id:
        type: "integer"

      ans:
        type: "string"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"